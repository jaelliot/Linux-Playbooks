---
- name: Ensure dependencies are present
  ansible.builtin.package:
    name:
      - wget
      - tar
    state: present
  become: true

- name: Check if doctl is already installed
  ansible.builtin.command: doctl version
  register: doctl_version_check
  failed_when: false
  changed_when: false
  ignore_errors: true

- name: Download doctl binary
  ansible.builtin.get_url:
    url: "{{ doctl_download_url }}"
    dest: "/tmp/doctl-{{ doctl_version }}-linux-{{ doctl_arch }}.tar.gz"
    mode: '0755'
  when: doctl_version_check.rc != 0

- name: Extract doctl binary
  ansible.builtin.unarchive:
    src: "/tmp/doctl-{{ doctl_version }}-linux-{{ doctl_arch }}.tar.gz"
    dest: "/tmp"
    remote_src: true
    creates: "/tmp/doctl"
  when: doctl_version_check.rc != 0

- name: Move doctl to /usr/local/bin
  ansible.builtin.copy:
    src: "/tmp/doctl"
    dest: "/usr/local/bin/doctl"
    mode: '0755'
    remote_src: true
  become: true
  when: doctl_version_check.rc != 0

- name: Ensure doctl is executable
  ansible.builtin.file:
    path: /usr/local/bin/doctl
    mode: '0755'
  become: true
  when: doctl_version_check.rc != 0

- name: Clean up downloaded archive
  ansible.builtin.file:
    path: "/tmp/doctl-{{ doctl_version }}-linux-{{ doctl_arch }}.tar.gz"
    state: absent
  when: doctl_version_check.rc != 0
